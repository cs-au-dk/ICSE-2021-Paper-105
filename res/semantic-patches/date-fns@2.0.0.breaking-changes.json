[
  {
    "id": "674",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "now functions don't accept string arguments, but only numbers or dates. ",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "675",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "min and max functions now accept an array of dates rather than spread arguments",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "676",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "make the second argument of format required for the sake of explicitness",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "678",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "renamed ISO week-numbering year helpers",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "679",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "new format string API for format function which is based on Unicode Technical Standard",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "719",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function renamed: eachDay → eachDayOfInterval. Arguments are now given as an object.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "720",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function renamed: getOverlappingDaysInRanges → getOverlappingDaysInIntervals. Arguments are now given as an object.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "721",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function renamed: isWithinRange → isWithinInterval. Arguments are now given as objects.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "724",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function submodules now use camelCase naming schema",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "656",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "functions renamed: areRangesOverlapping → areIntervalsOverlapping. Arguments are now given as Interval objects.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "741",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function submodules now use camelCase naming schema",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "748",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function renamed: distanceInWords → formatDistance",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "749",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function renamed: distanceInWordsStrict → formatDistanceStrict\n",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "750",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "function renamed: distanceInWordsToNow → formatDistanceToNow",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "754",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "partialMethod option in formatDistanceStrict is renamed to roundingMethod",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "766",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "parse that previously used to convert strings and numbers to dates now parses only strings in an arbitrary format specified as an argument. Use toDate to coerce numbers and parseISO to parse ISO 8601 strings.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "771",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "now closestTo and closestIndexTo don't throw an exception when the second argument is not an array, and return Invalid Date instead.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": true
  },
  {
    "id": "772",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "Locale renamed: en → en-US, zh_cn → zh-CN, zh_tw → zh-TW",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "773",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "now isValid doesn't throw an exception if the first argument is not an instance of Date. Instead, argument is converted beforehand using toDate.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": true
  },
  {
    "id": "777",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "null now is not a valid date. isValid(null) returns false; toDate(null) returns an invalid date. Since toDate is used internally by all the functions, operations over null will also return an invalid date.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": true,
    "unlikelyBreakingChange": false
  },
  {
    "id": "775",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "The Bower & UMD/CDN package versions are no longer supported.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": true,
    "unlikelyBreakingChange": false
  },
  {
    "id": "776",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "format, formatDistance (previously distanceInWords) and formatDistanceStrict (previously distanceInWordsStrict) now throw RangeError if one of the passed arguments is invalid. It reflects behavior of toISOString and Intl API.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": true
  },
  {
    "id": "778",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "all functions now check if the passed number of arguments is less than the number of required arguments and will throw TypeError exception if so.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": true,
    "unlikelyBreakingChange": false
  },
  {
    "id": "779",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "all functions now implicitly convert arguments (e.g. 0, null, true etc.) by new rules. See https://date-fns.org/v2.29.3/docs/Upgrade-Guide#arguments-conversion for more information.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": true,
    "unlikelyBreakingChange": false
  },
  {
    "id": "780",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "all functions that accept numbers as arguments, now coerce values using Number() and also round off decimals. Positive decimals are rounded using Math.floor, decimals less than zero are rounded using Math.ceil.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": true,
    "unlikelyBreakingChange": false
  },
  {
    "id": "774",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "Functions now throw RangeError if optional values passed to options are not undefined or have expected values. This change is introduced for consistency with ECMAScript standard library which does the same.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": true
  },
  {
    "id": "785",
    "packageVersion": "2.0.0",
    "packageName": "date-fns",
    "description": "unit option in formatDistanceStrict (previously distanceInWordsStrict) now accepts one of the strings: 'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  }
]