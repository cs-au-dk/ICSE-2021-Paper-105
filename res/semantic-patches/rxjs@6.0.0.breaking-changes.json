[
  {
    "id": "156",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "ajax: will no longer execute a CORS request by default, you must opt-in with the crossDomain flag in the config.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "158",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Removed fromPromise, should use from instead.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "141",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "utils: Many internal use utilities like isArray are now hidden under rxjs/internal, they are implementation details and should not be used.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "143",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "creation functions: All create functions such as of, from, combineLatest and fromEvent should now be imported from rxjs/create.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "152",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "operators removed: Operator versions of static observable creators such as merge, concat, zip, onErrorResumeNext, and race have been removed. Please use the static versions of those operations. e.g. a.pipe(concat(b, c)) becomes concat(a, b, c).",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "149",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Observable: You should no longer deep import custom Observable implementations such as ArrayObservable or ForkJoinObservable.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "154",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Rx.ts: importing from rxjs/Rx is no longer available. Upcoming backwards compat solution will allow that",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "150",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "_throw: _throw is now exported as throwError",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "157",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "websocket: WebSocketSubject will now JSON serialize all messages sent over it by default, to return to the old behavior, pass a config setting of serializer: x => x like so: websocket({ url, serializer: x => x })",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "161",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Operator renames: do -> tap, catch -> catchError, switch -> switchAll, finally -> finalize, throw -> throwError\n",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "147",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "operators: Pipeable operators must now be imported from rxjs like so: import { map, filter, switchMap } from 'rxjs/operators';. No deep imports.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "151",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "if: if is now exported as iif",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "155",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "never: no longer exported. Use the NEVER constant instead.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "148",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "ajax: Ajax observable should be imported from rxjs/ajax.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "142",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "testing observables: HotObservable and ColdObservable, and other testing support types are no longer exported directly.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "146",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "schedulers: Scheduler instances have changed names to be suffixed with Scheduler, (e.g. asap -> asapScheduler)",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "140",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "webSocket: webSocket creator function now exported from rxjs/websocket as websocket.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "153",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Symbol.observable: RxJS will no longer be polyfilling Symbol.observable. That should be done by an actual polyfill library. This is to prevent duplication of code, and also to prevent having modules with side-effects in rxjs.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "159",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Removed default import such that import Rx from 'rxjs'; fails. Instead import * as Rx from 'rxjs'; works",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "162",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "rxjs@6.0.0 is incompatible with the npm package symbol-observable",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "144",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "symbols: Symbols are no longer exported directly from modules such as rxjs/symbol/observable please use Symbol.observable and Symbol.iterator (polyfills may be required)",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "160",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "Dropping support for chaining operators (use pipe instead)",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "145",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "deep imports: Can no longer deep import top-level types such as rxjs/Observable, rxjs/Subject, rxjs/ReplaySubject, et al. All imports should be done directly from rxjs, for example: import \\{ Observable, Subject \\} from 'rxjs';",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "191",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "distinct: Using distinct requires a Set implementation and must be polyfilled in older runtimes",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": true,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "192",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "groupBy: Older runtimes will require Map to be polyfilled to use groupBy",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": true,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "193",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "asap: Old runtimes must polyfill Promise in order to use ASAP scheduling.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": true,
    "affectsAllClients": false,
    "unlikelyBreakingChange": false
  },
  {
    "id": "189",
    "packageVersion": "6.0.0",
    "packageName": "rxjs",
    "description": "NodeJS Dropping support for non-LTS versions of Node.",
    "deprecation": false,
    "askBeforePatch": false,
    "unknownPatchLocation": false,
    "affectsAllClients": true,
    "unlikelyBreakingChange": false
  }
]